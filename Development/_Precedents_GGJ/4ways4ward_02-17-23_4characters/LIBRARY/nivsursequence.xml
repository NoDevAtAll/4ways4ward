<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="nivsursequence" itemID="54c3c37d-000003e5" lastModified="1422121386">
  <timeline>
    <DOMTimeline name="nivsursequence">
      <layers>
        <DOMLayer name="Initialisation" color="#4FFF4F" autoNamed="false" layerType="folder"/>
        <DOMLayer name="Tableaux" color="#9933CC" parentLayerIndex="0" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
// level
var map:Array = [
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				 [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
				 ]

]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Variables" color="#FFFF4F" parentLayerIndex="0" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
// variables déplacements
var gravite:Number = 1;					// la gravité du jeu
var vitesse:Number = 12;					// la vitesse du héro
var sens:Number = 0; 					// la direction du héro sur X
var droite:Boolean=false;
var gauche:Boolean=false;
var haut:Boolean=false;
var bas:Boolean=false;
var tir:Boolean=false;
var T:int = 64// taille d'une tuile (carré)

// variables mouvements
var lateral:Boolean = false; 			// mouvement latéral 
var vise:Boolean = false;				// le héro vise 
var saute:Boolean = false ;				// le héro saute
var aucune:Boolean = true 				// aucune action en cours

// grille d'affichage
var grille:MovieClip = new MovieClip();	// le conteneur du décor

// crée le perso

var perso:niveau1= new niveau1();			// le clip du perso
perso.x=500;							// sa position sur X
perso.y=830;							// sa position sur Y

// liste d'affichage
addChild(grille)						// ajoute le décor 
addChild(perso)							// ajoute le perso


// crée le décor
creeDecor()														]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Ecouteurs" color="#FF4FFF" parentLayerIndex="0" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
// ecouteurs
stage.addEventListener(KeyboardEvent.KEY_DOWN, appuyer);	// appuie
stage.addEventListener(KeyboardEvent.KEY_UP, relacher);		// relâche
stage.addEventListener(Event.ENTER_FRAME, main);			// pilote
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Moteur" color="#4FFFFF" autoNamed="false" layerType="folder"/>
        <DOMLayer name="Création du level" color="#808080" parentLayerIndex="4" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
// création du level
function creeDecor():void{
	for (var i:int=0; i<9; i++){					// boucle sur les 20 colonnes
		for (var j:int=0; j<15; j++){				// boucle sur les 15 lignes de chaque colonne
			if(map[i][j]>0)	{						// si la valeur de la tuile est supérieure à 0
				var t:Tuiles = new Tuiles()			// crée une tuile
				t.x= j*T;							// position sur X
				t.y= i*T;							// position sur Y
				t.gotoAndStop(map[i][j])			// frame à afficher
				grille.addChild(t)					// ajout dela tuile à la grille
			}
		}
	}
}

]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Touches" color="#4F80FF" parentLayerIndex="4" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[// Spacebar = 32
// Droite = 37

// Appuyer sur une touche
function appuyer(event:KeyboardEvent):void {
	//if (event.keyCode == 38) haut = 	false;				// avancer
	//if (event.keyCode == 40) bas = 		false;				// reculer
	//if (event.keyCode == 37) droite =  	true;				// droite
	if (event.keyCode == 32) gauche =  	true;				// gauche
	//if (event.keyCode == 32) tir =  	false;				// tirer
}

// relâcher une touche
function relacher(event:KeyboardEvent):void {
	//if (event.keyCode == 38) haut = 	false;				// stop avancer
	//if (event.keyCode == 40) bas = 		false;				// stop reculer
	//if (event.keyCode == 37) droite = 	false;				// stop droite
	if (event.keyCode == 32) gauche = 	false;				// stop gauche
	//if (event.keyCode == 32) tir =  	false;				// tirer
}

]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Moteur" color="#FF4F4F" parentLayerIndex="4" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
// main
function main(e:Event):void {

	// variables
	sens = int(droite)-int(gauche);					// orientation
	aucune = !droite && !gauche && !haut && !bas	// aucune action
	lateral = droite || gauche;						// mouvement latéral
	vise = gravite==0 && bas;						// visée
	
	// déplacements 
	deplacement(sens)								// déplacements du perso
	
	// mouvements
	if (sens) perso.scale = sens;					// oriente le perso
	if (aucune) mouvement(1);						// repos 
	if (lateral) mouvement(1); 						// droite et gauche
	if (gravite<0) mouvement(1); 					// saute
	if (gravite>0) mouvement(1); 					// tombe
	if (vise) mouvement(5);							// vise
	if (vise && tir) perso.anim.play();				// tire
}

// animation du perso
function mouvement(mouv):void {
	if (perso.currentFrame != mouv) {				// si le mouvement est différent de celui à effectuer
		perso.gotoAndStop(mouv);					// effectue le nouveau mouvement
	}
}]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Déplacements" color="#4FFF4F" parentLayerIndex="4" current="true" isSelected="true" autoNamed="false">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[
function deplacement(dx:int):void{
	
	perso.x += 10*dx; 								// déplace le perso sur X
	
	var Y:Number = perso.y								// raccourci de programmation pour perso.x
	var X:Number = perso.x								// raccourci de programmation pour perso.x
	var L:int;											// ligne (grille) du point bas du perso
	var C:int = (X+32*dx)/T;							// côté (grille) du perso concerné par la colission
	
	// latéral							
	for (L=(Y-32)/T; L<Y/T+1; L++) {					// vérifies toutes lignes (grille) sur lesquelles se tient le perso
		if (map[L][C]==1) {								// si le bord renconte un bloc solide en latéral (prévoir multiples tuiles)
			X = perso.x = C*T+32-T*dx;					// colle le perso au bord du bloc
		}
	}

	Y = perso.y += gravite; 							// déplace le perso sur Y
	
	// tombe
	for (C=(X-32)/T; C<(X+32)/T; C++) {					// vérifies toutes colonnes (grille) sur lesquelles se tient le perso	
		if (map[L][C]==1 && perso.y>=(L-1)*T) {			// blocs solides
			perso.y = (L-1)*T							// position du perso sur Y
			gravite = -int(haut)*16						// annule et autorise le saut
			return				
		}
	}
	
	// touche plafond
	if (gravite<0) {									// si le perso saute
		L = (Y-32)/T;									// case occupée par le haut du perso
		for (C=(X-32)/T; C<(X+32)/T; C++) {				// cases occupées par les limites X du perso
			if (map[L][C]>0) {							// si la case n'est pas vide
				perso.y = (L+2)*T-32					// position du perso sur Y
				gravite=1;								// arrête le saut
			}
		}
	}
	
	// gravite
	if (gravite++>T) gravite=T							// limite la gravité max à la taille d'une tuile
}]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>